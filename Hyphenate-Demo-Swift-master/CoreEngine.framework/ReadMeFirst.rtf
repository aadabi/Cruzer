{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23640\viewh15500\viewkind0
\deftab770
\pard\tx770\tx1290\pardeftab770\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 \
\
************** CoreEngine ********************************\
\pard\tx770\pardeftab770\pardirnatural
\cf0 \
\
====================================================================================================================\
ABSTRACT:\
\
This demonstrates the primary use cases for the Core Engine Framework.\
Core Engine is meant to track the driving related data by leveraging the CoreLocation features provided by Apple.Package is developed with optimal battery efficiency.\
\
The following are some of the features available,\
\
* Once start, the Engine can capture the user's trips automatically.\
* The engine configuration, which are used for tracking the driving can be configured.\
* Engine will provide instant event notifications for Braking, Acceleration and Speeding.\
* Engine will give the driving data in each 5 mile points.\
* Engine is capable of generating engine activity file which is useful for debugging purpose. The file generation can be turned OFF/ON in the engine configuration.\
  This file is available in the Documents directory under the folder name 'Engine'.\
* Engine is flexible for debug purpose since it will generate 'raw data' file for the GPS signals received. Raw data file consists of detailed information about the vehicle condition\
  in each second. This includes, 1. trip ID 2. Time stamp 3. Lat Long 4. Speed 5. Accuracy info 6. Event info etc. This feature can also be control in the engine configuration.\
* Engine is capable of switching its mode which is suitable for energy saving by itself.\
\
\
 \
================================================================================\
BUILD REQUIREMENTS:\
\
iOS 8.0 or later\
\
================================================================================\
RUNTIME REQUIREMENTS:\
\
iPhone OS 8.0 or later\
\
================================================================================\
PACKAGING LIST:\
\
DrivingEngine\
Handles engine input and output activities.\
 1. Provide methods for starting or stoping the engine. \
 2. Setting up the engine configurable parameters. \
 3. Getting the state of the engine.\
 4. Setting delegate for listening to the engine outputs.\
 5. Register/Unregister for drive event callbacks.\
\
DrivingEngineDelegate\
Driving engine delivers its outputs through this delegate class. One can implement the required and optional methods to receive the engine outputs\
\
\
SDConfiguration\
Represents the engine parameters. Please refer the class definition for the available configurable engine parameters.\
\
}